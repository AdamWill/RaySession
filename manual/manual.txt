1. Introduction
RaySession est un gestionnaire de session audio pour GNU/Linux. Il permet de démarrer dans une même session plusieurs programmes audio, de sauvegarder leurs projets ensemble et ainsi d’éviter de multiples manipulations pour retourner à une configuration donnée.
Pour être lancés dans RaySession, il est très largement préférable que ces programmes audio soient compatibles avec le protocole NSM, et beaucoup le sont déjà, entre autres Ardour, Qtractor, Carla, Guitarix, Mamba, Patroneo, ZynAddSubFx...
RaySession part du principe que votre configuration audio est fonctionnelle pour de la production audio, si ce n’est pas le cas réglez d’abord ce problème et ne perdez pas votre temps à essayer d’utiliser RaySession.
Maintenant voyons comment s’en servir.



2. Exemple d'utilisation simple
Pour la production audio sous GNU/linux, Il est largement conseillé d’utiliser le serveur JACK. Avant de créer ou de lancer une session, assurez-vous que le serveur JACK tourne, RaySession n’a aucun rapport direct avec JACK, toutefois les programmes que vous allez lancer dans votre session en auront besoin.

Prenons un exemple où pour composer un morceau, nous aurons besoin des logiciels Ardour et Guitarix, assurez vous que ces 2 programmes soient installés.
Pour créer une nouvelle session, cliquez en haut à gauche sur « Nouvelle Session » (ou Ctrl+N). Apparaît alors une fenêtre de dialogue.
En haut à droite vous apercevez le dossier racine des sessions, c’est là que les sessions seront sauvegardées (une session RaySession étant un dossier contenant un fichier raysession.xml).
Rentrez le nom voulu pour cette nouvelle session dans le champ prévu à cet effet. Pour mettre votre nouvelle session dans un sous-dossier, tapez le nom de la manière suivante : sous-dossier/ma session .
La boîte à choix multiples de modèles de session vous permet de choisir entre
    • Un modèle de session vide
    • Un modèle avec mémoire des connexions JACK
    • Un modèle scripté avec mémoire de la configuration de JACK
    • Un modèle avec les scripts de session de base (pour les utilisateurs avancées pourvus de connaissances en script shell)
    • Tous les modèles de session que vous aurez vous-même créés.
Dans un premier temps, laissez le modèle sur « Avec mémoire des connexions de JACK », cliquez sur 'Ok' pour lancer votre session.


La partie session de la fenêtre devient active, en haut est écrit le nom de votre session, et votre session contient déjà un programme client qui s'appelle "Connexions JACK". C'est lui qui sauvegardera et refera les connexions de la baie de brassage de JACK.
Pour ajouter Ardour à votre session, cliquez sur le bouton "Application" (ou Ctrl+A), apparaît alors la fenêtre des applications. Dans la partie droite, cherchez Ardour (Selon votre version d'ardour, il est possible qu'il s'appelle Ardour5 ou Ardour6) et double-cliquez dessus. Voilà, un client Ardour apparaît en dessous de Connexions JACK et Ardour démarre (normalement directement avec une session Ardour vide).
Faites de même avec Guitarix.
Dans Ardour, ajoutez une piste (Menu: Piste -> Ajouter une piste), dans la fenêtre Ardour qui est apparue, nommez la piste "Guitare" et mettez la boîte à choix multiples "configuration" sur Stereo.
Dans votre baie de brassage (Catia, QJackCtl ou autre) ou dans Ardour, connectez l'entrée de Guitarix à une entrée matérielle et  les sorties de Guitarix vers les entrées de cette nouvelle piste Ardour.
Pour effectuer ces connexions depuis la console de Mixage d'Ardour, cliquez sur le bouton de connexions des entrées de la piste situé en dessous du nom de la piste(ici "Guitare". Dans le menu déroulant cliquez sur "Déconnecter". Ré-appuyez sur le bouton et cliquez sur "Grille de routage", allez chercher les sorties de Guitarix sur l'onglet "Autre" et connectez bien la sortie gauche à l'entrée gauche, la sortie droite à l'entrée droite.
Voilà, vous avez une configuration où vous pouvez enregistrer directement le son de votre guitare traité par Guitarix dans Ardour. Si vous n'avez pas de guitare, vous n'avez qu'à chanter faux dans un micro ou taper sur un coussin, ce n'est ici qu'un exemple.
Retournez maintenant à la fenêtre de RaySession, et sauvegardez la session en cours en cliquant le bouton en forme de disquette vers le haut à droite (ou Ctrl+S). Il est vivement recommandé car très pratique d'affecter un raccourci clavier global de votre système à la sauvegarde de la session en cours. Celà dependra de votre environnement de bureau, mais il suffit d'affecter le raccourci Ctrl+Meta+S à la commande `ray_control save` (Meta est la touche Windows), ainsi vous n'aurez pas à retourner à la fenêtre de RaySession pour sauvegarder.

Maintenant, fermez la session en cliquant sur la croix rouge en haut à droite (ou Ctrl+W).
Une fois la session fermée, cliquez sur "Ouvrir une session" (ou Ctrl+O), double-cliquez sur la session que vous venez de créer pour la ré-ouvrir.
Vous devez retrouver les programmes et leur session ainsi que les connexions de JACK telles qu'elles étaient quand vous avez fermé la session, et tout fonctionne donc sans aucune autre manipulation. Un des avantages de la modularité dans ce cas précis, c'est qu'une fois qu'on aura terminé les prises de guitare, on pourra arrêter Guitarix pour ne pas surcharger le processeur inutilement, et il sera tout de même facile de le redémarrer si besoin.


_______________________________
* Vue d'ensemble des outils de la session

ligne du haut, de gauche à droite:
* le bouton menu qui vous donne accès à 
    * sauvegarder la session en cours comme modèle
        Le modèle de session créé apparaîtra alors dans la boîte à choix multiples de modèles de session dans la fenêtre de dialogue "Nouvelle Session". Attention toutefois, L'ensemble des fichiers de la session seront sauvegardés dans le modèle, il ne faut donc pas le faire si la session contient beaucoup de fichiers audios. D'une part la copie sera longue, d'autre part vous risquez de multi-copier inutilement des fichiers qui prendront beaucoup de place.
    * Dupliquer la session en cours
        C'est l'équivalent du bien connu "Sauvegarder sous...", sauf que RaySession est obligé d'arrêter et de redémarrer la plupart des programmes pour passer d'une session à l'autre. Évitez de dupliquer une session avec beaucoup de fichiers audios, celà pourrait être long, mais, fort heureusement une telle opération peut être annulée.
    * Renommer la session
        Il faudra alors arrêter tous les clients
    
* le bouton en forme de crayon vous donne accès aux notes de session. Écrivez ici des informations dont vous avez besoin, des réglages physiques, les paroles d'une chanson, la recette du cassoulet de mamie...toutefois n'y écrivez pas un roman en 3 tomes, d'autres outils sont bien plus adaptés, et les notes sont limitées à 65000 caractères pour des raisons techniques. Le crayon est vert quand des notes existent, il est orange quand la fenêtre de notes est ouverte, sinon il est transparent.

* le nom de la session chargée
* le bouton "Abandonner la session" qui permet de fermer la session sans la sauvegarder
* le bouton "Fermer la session", qui sauvegarde et ferme la session en cours. Notez que vous n'avez pas besoin de fermer la session en cours pour en ouvrir une autre. Certains clients sont capables de basculer d'une session à l'autre et ça peut être beaucoup moins long que de tout fermer pour tout relancer.

ligne du bas, de gauche à droite:
* le bouton en forme de dossier pour ouvrir le dossier de la session avec votre gestionnaire de fichiers
* le bouton en forme d'étoile jaune qui déroule un menu contenant vos applications favorites s'il y en a
* le bouton "Application" qui permet d'ajouter à la session un modèle d'application d'usine ou que vous aurez créé vous même. C'est la méthode conseillée pour ajouter un client.

#TODO
* le bouton "Exécutable" qui permet d'ajouter à la session un programme depuis son exécutable. Vous en aurez besoin si vous souhaiter ajouter un programme pour lequel il n'existe pas de modèle.

#TODO

* le bouton de marche arrière pour revenir à un état précédent de la session. Celà nécessite d'avoir le programme git installé. Voir les clichés pour plus de détails.

* l'indicateur d'état du serveur. Il peut avoir l'un des statuts suivante:
    * éteint : pas de session en cours
    * prêt: la session est en cours
    * lancement: lancement des programmes de la session
    * copie : une copie est en cours, pour une duplication de session ou une sauvegarde de la session comme modèle
    * fermeture : la session est en train de se fermer
    * cliché : un cliché de la session est en train d'être pris, et que vous pourrez revenir à l'état actuel la session
    * script: un script est actionné
    
    Certains de ces états peuvent être en réalité très furtifs, mais ils sont affichés pendant un temps suffisament long pour que vous puissiez les voir.
    
* le bouton de sauvegarde de la session
* la corbeille, vous trouverez ici les clients que vous avez supprimés. Vous pourrez alors les restaurer dans la session ou supprimer définitivement tous les fichiers qu'ils ont créé dans le dossier de la session.


__________________________
Vue d'ensemble d'un client

Ce client contient de gauche à droite une icône sur laquelle vous pouvez cliquer pour afficher un menu, un nom ("Connexions JACK"), des boutons Démarrer/Arrêter, un indicateur d'état du client ("prêt"), un bouton de sauvegarde et un bouton de suppression.

* L'icône du client sur laquelle vous pouvez cliquer pour faire apparaître un menu avec les actions suivantes
    * Sauvegarder comme modèle d'application
        Le modèle créé apparaîtra alors dans la fenêtre d'applications que vous faites apparaître en cliquant sur Application (ou Ctrl+A). Celà permet par la suite de lancer directement un client avec la configuration souhaitée (Ardour avec telles pistes, Hydrogen avec tel kit de batterie...). Attention, celà copie tous les fichiers du client donc évitez de le faire si le client contient beaucoup de fichiers audio.
    * Renommer
        Changer le nom du client situé à droite de son icône, il s'agit d'un nom purement visuel qui peut vous aider à retrouver vos moutons
    * retourner à un état précédent
        Permet de faire revenir uniquement le client à un état antérieur de la session. Voir les clichés.
    * Propriétés
        Affiche la fenêtre des propriétés du client
            #TODO
    Ce même menu est accessible par clique droit n'importe où sur le client
    
* Le nom du client, qui peut-être changé facilement par clique droit -> renommer

* selon le type et les capacités du client vous pouvez voir ici
    * un bouton "Hack", celà signifie que le client n'est pas compatible NSM, en tout cas qu'il n'est pas lancé avec ce protocole. Cliquer sur Hack permet de changer la façon dont il est lancé en ouvrant la fenêtre de propriétés du client sur l'onglet Ray-Hack
    * un oeil (éventuellement barré), celà signifie que le client est compatible NSM et qu'il est capable d'afficher ou cacher sa fenêtre en cliquant sur l'oeil.

* Le bouton "Démarrer" qui est grisé si le client est déjà démarré
* le bouton "Arrêté" qui est grisé si le client n'est pas démarré. Si vous arrêtez le client et qu'il n'est toujours pas arrêté après un certain temps, le bouton devient rouge et vous pouvez cliquer dessus pour tuer le client. Mais restez détendus, et ne l'utilisez que si vraiment il vous semble complètement inerte, celà pourrait causer des problèmes, même si a priori personne ne vous enverra en prison.
* l'état du client qui peut être
    * arrêté : le client est arrêté
    * prêt : il est lancé et fonctionnel
    * lancé : s'il reste sur l'état lancé, celà signifie
        * si c'est un client Ray-Hack, qu'il n'a pas de fichier de configuration
        * s'il est lancé comme un client NSM, qu'il n'est pas compatible NSM, et qu'ainsi toute sauvegarde est vaine. Il peut être pratique de lancer de cette façon certains programmes tels qu'une baie de brassage (Catia) ou un utilitaire dont on n'a pas besoin de sauvegarder l'état (Qrest).
    * ouverture: le programme est en train d'ouvrir son projet, patientez un peu
    * fermeture: le programme est en train de se fermer

* le bouton en forme de disquette qui permet de sauvegarder le client. Si par dessus cette disquette vous voyez
    * trois points rouges: le client contient des changements non sauvegardés
    * un V vert: le client ne contient pas de changements non sauvegardés
    * un point d'exclamation orange: Ce n'est pas un client NSM, et il est impossible de sauvegarder son projet, vous devrez le faire vous même
    
* la croix rouge qui permet d'envoyer le client à la corbeille


__________________________
Fenêtre d'ajout d'application

Le fenêtre d'ajout d'application se lance en cliquant sur le bouton "Application" (ou Ctrl+A).
La liste des applications disponibles est à droite.
En haut à gauche, c'est le bloc de filtres
* le champ de filtre permet de rentrer une chaîne de caractères, seuls les modèles contenant cette chaîne de caractères dans leur nom apparaîtront.
* la case à cocher "Usine" affiche les modèles intégrés à RaySession ou fournis par votre distribution
* "utilisateur" affiche les modèles créés par l'utilisateur
* NSM affiche les clients compatibles NSM, ou lancés comme tel (voir lancer un programme non fourni)
* Ray-Hack affiche les clients lancés sans protocole NSM

En bas à gauche le bloc d'informations sur le modèle sélectionné à droite
* en haut à droite de ce bloc une étoile, cliquez dessus pour l'ajouter aux favoris ou l'enlever des favoris
* Si c'est un modèle utilisateur, un bouton "Utilisateur" vous permet de supprimer ce modèle
* le bouton en bas à droite de ce bloc vous permet d'accéder à toutes les propriétés du modèle, comme dans la fenêtre de propriétés du client, sauf que rien n'est éditable.

Astuce : Cette fenêtre est conçue pour un ajout d'application très rapide, et se comporter comme Alt+F2 sur votre bureau.
Par exemple, depuis la fenêtre principale de RaySession, pour ajouter Carla tapez Ctrl+A, puis carla, sélectionnez le bon modèle avec les flèches Haut/Bas, puis Entrée.

__________________________
Fenêtre d'ajout d'exécutable

Vous aurez besoin de passer par cette fenêtre si vous voulez ajouter un client qui n'apparaît pas dans la liste de la fenêtre d'ajout d'application.
Cette fenêtre se présente très simplement, un champ pour rentrer l'exécutable, une case "Protocole NSM", un bouton d'options avancées.

Laissez le protocole NSM coché si:
    * le programme à lancer est compatible NSM (s'il n'est pas dans la liste d'applications, merci de le faire savoir !)
    * le programme à lancer est un utilitaire dont on n'a aucun besoin de sauvegarder un quelconque projet (QRest, Catia...).
        L'état d'un tel programme restera sur "lancé" et ne sera jamais "prêt", c'est sans importance vu qu'ils n'ont pas de projet à sauvegarder.

Si vous laissez le protocole NSM coché il ne sera pas possible d'ajouter un exécutable vers un chemin absolu, l'exécutable doit se situer dans un emplacement prévu à cet effet (vous ne pourrez pas lancer "/usr/bin/mon_programme", mais mon_programme).

Décocher la case "Protocole NSM" revient à lancer le programme avec le pseudo-protocole Ray-Hack.

Si vous cliquez sur le bouton d'options avancées, un bloc options avancées apparaît avec
* la case "Démarrer le client", si vous la décochez le client sera ajouté mais non lancé
* la boîte à choix multiple "Mode de préfixe", celà définit le préfixe du nom des fichiers du client
    * sur "Nom de la session", les noms des fichiers commenceront par le nom de la session, c'est la valeur par défaut
    * sur "Nom du Client", les noms des fichiers commenceront par le nom fourni par le client lui-même, comme c'est le cas avec New Session Manager
    * sur "Personnalisé", les noms des fichiers commenceront par la valeur que vous inscrirez dans le champ "Préfixe" juste en dessous
* le champ "Préfixe" qui n'est actif que si "Mode de Préfixe" est sur "Personnalisé"
* le champ ID du client. Ne rentrez ici que des caractères alphanumériques ou des '_'. Celà est utile si vous voulez attraper et lancer des projets existants dans la session avec un exécutable. C'est pratique si vous voulez charger dans la session des projets créés en dehors d'une session. Aucune méthode ne permet de rendre la chose plus simple, celà dépend énormément du programme utilisé. RaySession vous insultera si vous rentrez un identifiant de client qui existe déjà dans la session.


__________________________
Fenêtre de propriétés d'un client

La fenêtre des propriétés du client comprend 2 onglets, un onglet Général et un onglet spécifique au protocole utilisé par le client
* Le premier bloc de l'onglet "Général" affiche l'identifiant, le protocole, l'étiquette, la description et l'icône du client.
Si vous ne les éditez pas, l'étiquette, la description et l'icône sont tirées du fichier .desktop associé à l'exécutable lancé, s'il a été trouvé.
Si vous tenez à connaître ce fichier .desktop, utilisez ray_control client IDENTIFIANT get_properties (en remplaçant IDENTIFIANT par l'identifiant du client).
* Ensuite vient le bloc des clichés, voir #les clichés.
* la case à cocher "Empêcher l'arrêt sans sauvegarde récente ou possible" concerne la fenêtre qui peut apparaître lorsque vous demandez à un client de s'arrêter.
    Si cette case est décochée, alors le client sera stoppé sans qu'une fenêtre ne vous prévienne
    Si la case est cochée, la fenêtre vous previendra lorsque
        * le client est non-sauvegardable depuis RaySession
        * on sait que le client contient des changements non sauvegardés
        * le client semble ne pas avoir été sauvegardé depuis plus d'une minute
    
    cocher la case ou pas dépend seulement de l'importance de la sauvegarde de votre client, à vous de jauger.

Si le client obéit au protocole NSM, l'onglet NSM fournira un champ pour éditer l'exécutable et un autre pour éditer ses arguments. Les éditer est dangereux mais peut-être utile, ne les éditez que si vous savez exactement ce que vous faites.

Si le client est de type Ray-Hack, ici moult champs s'offrent à vous.
____________________________________
Les options du démon

* Fournir des raccourcis du dossier de la session
    En production audio, on a souvent recours au fait de créer un fichier audio ou midi avec un programme pour finalement le charger dans un autre. Cette option offre quelque chose de purement pratique: un raccourci vers le dossier de la session en cours dans votre gestionnaire de fichier et dans les boîtes de dialogue prévues pour aller chercher ou sauvegarder les fichiers. Ça permet tout simplement d'éviter de perdre du temps à parcourir l'arborescence de son dossier personnel pour chercher un fichier que vous avez mis dans le dossier de votre session puisque c'est bien sa place.
    Bien entendu, ce raccourci est supprimé lorsque la session est déchargée.
    Techniquement, les raccourcis sont créés pour GTK2, GTK3, QT4, QT5, KDE et FLTK.

* Cliché automatique à la sauvegarde
    Cette option est très loin d'être triviale, elle permet de prendre un cliché de la session après chaque sauvegarde. Celà signifie qu'en cas d'erreur technique ou artistique vous aurez la possibilité de retrouver la session dans l'état où elle se trouvait au moment du cliché.
    Cette option nécessite le programme git.
    Voir les clichés pour plus de détails.
    
* Mémoire des bureaux
    SI cette option est enclenchée, RaySession sauvegardera (ou tentera de sauvegarder) le numéro du bureau virtuel sur lequel se trouvaient les fenêtres des clients à la sauvegarde de la session. 
    Ainsi lorsque vous relancerez la session ou les clients, les fenêtres seront redispatchées sur les bureaux sur lequels elles figuraient.
    Cette option nécessite d'avoir wmctrl installé pour fonctionner, et ne fonctionnera probablement pas avec Wayland.
    
* Scripts de session
    Les scripts de session permettent de lancer des scripts personnalisés au chargement, à la sauvegarde et à la fermeture de la session. Ces scripts sont situés dans un dossier ray-scripts placé dans le dossier de la session ou dans un dossier parent. Le modèle de session "Avec mémoire de la configuration de JACK" utilise les scripts de session pour arrêter, configurer et redémarrer JACK conditionnellement à l'ouverture et à la fermeture de la session. Désactiver les scripts de session permet d'ignorer ces scripts, et ainsi d'ouvrir une session normalement.
    Voir les scripts de session pour plus de détails.
    
* Se souvenir de l'état des IGUs
    Cette option ne concerne que les client NSM capables d'afficher/cacher leur interface graphique. Sans cette option, certains d'entre eux vont toujours démarrer cachés, d'autres vont se souvenir s'ils étaient visibles à leur dernière sauvegarde. Avec cette option enclenchée, les interfaces graphiques seront affichées au moment où la session est prête si elles étaient visibles lors de la dernière sauvegarde ou si le client n'a jamais été lancé.
    
____________________________________
Les Clichés

Les clichés nécessitent d'avoir le programme 'git' installé, si vous n'avez pas 'git', le bouton de marche arrière n'apparaît pas et il est impossible de prendre un cliché ou d'y revenir.
Un cliché mémorise les fichiers et leurs contenu à un moment précis. Les fichiers volumineux et les fichiers ayant certaines extensions tels que les fichiers audio et video sont ignorés, sinon le processus de cliché serait trop long et celà doublerait inutilement la taille des dossiers de session. Celà n'est en fait pas très gênant, au contraire, puisque vos fichiers audio récents restent présents quand vous retournez à un cliché précédent.
L'intérêt des clichés réside dans le fait de pouvoir revenir à moment antérieur de la session, avant d'avoir eu cette idée artistique géniale qui s'est avérée nulle et non avenue, avant d'avoir tenté un redécoupage des échantillons au microcoscope qui a finalement tué toute forme de musicalité, avant qu'un programme plante pour une raison inconnue des services de police...
Il est également possible de faire revenir uniquement un client à un état précédent de la session en faisant un clique droit sur le client, puis "Retourner à un état précédent".
Si vous le souhaitez vous pouvez éditer pour chaque client les fichiers ignorés par les clichés dans la fenêtre de propriétés du client.
Avec l'option "Cliché automatique à la sauvegarde", un cliché est pris juste après chaque sauvegarde de la session, sauf s'il n'y a aucun changement depuis le cliché précédent. Pour prendre un cliché à un autre moment, cliquez sur l'icône de marche arrière à droite du bouton "Exécutable" et sur "Prendre un cliché maintenant", celà présente l'avantage de pouvoir nommer le cliché et d'avoir ainsi un repère temporel plus parlant que la date et l'heure du cliché.
Pour revenir à un cliché, cliquez sur l'icône de marche arrière et suivez les instructions.

____________________________________
Les scripts de session

Les scripts de session permettent de programmer des actions personnalisés à l'ouverture, à la sauvegarde et à la fermeture de la session. Éditer ces scripts nécessite des connaissances en script shell, ne perdez pas votre temps à lire ce paragraphe si vous n'y connaissez rien.
Les scripts de session se trouvent dans un dossier ray-scripts situé soit dans un dossier de la session, soit dans un dossier parent.
Par exemple, pour une session étant dans:
~/Ray Sessions/avec_script_de_foo/ma session

le dossier des scripts de session peut-être
~/Ray Sessions/avec_script_de_foo/ma session/ray-scripts
~/Ray Sessions/avec_script_de_foo/ray-scripts
~/Ray Sessions/ray-scripts
~/ray-scripts

L'intérêt d'un tel comportement est de pouvoir scripter un ensemble de sessions sans avoir à y recopier les scripts, mais surtout de livrer une session non scriptée lorsqu'on la transfère à quelqu'un d'autre pour un travail collectif.
Seul le dossier de scripts le plus près de la session dans l'arborescence sera considéré. Ainsi, un dossier ray-scripts vide dans une session désactivera les scripts pour cette session.

Pour éditer les scripts, commencez par créer une session avec le modèle "avec les scripts de base", il s'agit d'un modèle de session avec des scripts ne comprenant absolument aucune action particulière. Rendez-vous dans le dossier ray-scripts de la session, vous y trouverez les fichiers load.sh, save.sh et close.sh . Dans chacun de ces scripts, "ray_control run_step" correspond à l'action normale effectuée (selon le script: charger, sauvegarder ou fermer). Si un de ces 3 scripts ne vous est d'aucune utilité, supprimez le, ce sera du temps gagné de ne pas passer par ce script.

Vous aurez probablement besoin de l'utilitaire en ligne de commande ray_control pour effectuer des actions en rapport avec tel ou tel client. tapez ray_control --help pour connaître toutes ses possibilités.

Le modèle de session à mémoire de configuration de JACK utilise les scripts de session, mais on peut aussi imaginer moult actions possibles selon vos besoins et vos envies, par exemple :
* définir un ordre bien précis de lancement des clients à l'ouverture de la session 
* faire une copie de sauvegarde de la session sur un disque dur externe à chaque fermeture (un exemple est fourni dans le code source)
* envoyer un raccourci Ctrl+S aux fenêtres des clients non sauvegardables à la sauvegarde de la session (un exemple est fourni dans le code source)
* Allumer le bouton rouge à l'entrée du studio à l'ouverture, l'éteindre à la fermeture
* Lancer la machine à café à la fermeture de la session (exemple débile, va donc appuyer sur le bouton de la cafetière, de toutes façons faudra changer le filtre !)
* Faire beaucoup, beaucoup, beaucoup d'erreurs qui feront planter votre session, soyez prudents évidemment !


__________________________
Sous le capot

RaySession n'est en réalité qu'une interface graphique pour ray-daemon. Lorsque vous lancez raysession, l'interface graphique lance le démon et s'y connecte, et elle arrête le démon lorsqu'on la ferme. L'interface graphique et le démon communiquent entre eux par messages OSC (Open Sound Control), comme c'est le cas entre le démon et les clients NSM. Ainsi, vous pouvez connecter plusieurs interfaces graphiques à un démon, même à distance. Tapez raysession --help pour voir comment faire.

Il n'est pas interdit d'avoir plusieurs instances de démon lancés simultanément, ainsi si vous lancez raysession alors qu'une instance est déjà lancée, celle-ci lancera un nouveau démon. Toutefois, cette façon de travailler étant peu commune, l'utilisation d'un seul démon est favorisée. Ainsi, si un démon tourne et qu'il n'a aucune  interface graphique attachée, raysession se connectera à ce démon par défaut.

__________________________
ray_control , contrôler raysession en ligne de commande

ray_control vous permet de faire a peu près tout ce qu'il est possible de faire avec l'interface graphique, et même un peu plus. tapez ray_control --help-all pour connaître l'ensemble des possibilités.
Au cas où il y a plusieurs démons lancés (voir #Sous le capot), ray_control ne considerera que celui qui a été lancé en premier, sauf si vous spécifiez son port OSC avec l'option --port ou la variable d'environnement RAY_CONTROL_PORT.
On pourrait penser qu'il n'y a pas d'intérêt à utiliser ray_control puisque la commande oscsend permet d'envoyer un message OSC au démon, c'est faux.
D'une part, parce que oscsend permet d'envoyer des messages mais pas d'obtenir des informations de manière simple (quels sont les clients actifs ? quel est l'executable de tel client ? ...), d'autre part parce que la commande ray_control se terminera lorsque l'action demandée sera effectuée, par exemple ray_control open_session ma_session se terminera lorsque la session sera chargée.

Pensez à affecter ray_control save à un raccourci global de votre environnement de bureau (Ctrl+Meta+S), celà vous fera gagner un temps fou !

__________________________
Les Sessions Réseau

Une session réseau permet de lancer une autre session sur une autre machine en même temps que votre session. Ça peut être particulièrement utile si vous utilisez net-jack pour décharger votre machine d'une partie du DSP, si vous avez des effets gourmands qui tournent sur une autre machine par exemple.
Les sessions réseau fonctionnent selon un principe maître <-> esclave. Une session est maîtresse et peut avoir plusieurs sessions esclaves elles-mêmes maîtresses d'autres esclaves, mais un tel scénario semble complètement farfelu. Organisez vous simplement: un maître, un ou des esclave(s).

Pour lancer une session réseau (esclave donc), lancez le modèle d'application "Network Session" depuis la fenêtre des applications et suivez les instructions.

Vous devrez lancer un démon sur la machine distante avec la commande ray-daemon -p 1234 (1234 est un exemple, mettez le port que vous voulez). Ce démon vous affiche dans le terminal deux URLs possibles. Vous devrez copier dans la fenêtre d'invitation de la session réseau l'une de ces deux URLs. La première (qui commence par osc.udp://192.168.) doit fonctionner à coup sûr, la seconde ne fonctionnera que si le nom de la machine esclave est correctement renseigné dans le fichier /etc/hosts de la machine maître. Toutefois, renseigner le nom de la machine esclave dans /etc/hosts et utiliser la deuxième URL est préférable, parce que l'adresse en 192.168. bougera si vous branchez votre machine esclave différemment (en filaire, en wifi), ou si vous réinstallez sa distribution.

Vous avez à présent 2 fenêtres RaySession sur votre machine maître, l'une contrôle la session maître, l'autre l'esclave. Vous reconnaîtrez l'esclave au fait qu'elle n'a ni barre d'outils (Nouvelle Session, Ouvrir une session, Contrôle), ni boutons "Abandonner la session", "Fermer la session". La fenêtre esclave est cachable comme c'est le cas dans beaucoup de programmes NSM.

Si vous lancez raysession -p 1234 sur votre machine esclave, vous aurez la fenêtre de la session esclave en double exemplaire, une sur chaque machine.

Conseil: Mettez ce ray-daemon -p 1234 au démarrage de votre machine esclave. 


