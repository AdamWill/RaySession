# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'houston_patchbay/resources/ui/canvas_options.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CanvasOptions(object):
    def setupUi(self, CanvasOptions):
        CanvasOptions.setObjectName("CanvasOptions")
        CanvasOptions.resize(224, 350)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(CanvasOptions)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.checkBoxGracefulNames = QtWidgets.QCheckBox(CanvasOptions)
        self.checkBoxGracefulNames.setObjectName("checkBoxGracefulNames")
        self.verticalLayout.addWidget(self.checkBoxGracefulNames)
        self.checkBoxA2J = QtWidgets.QCheckBox(CanvasOptions)
        self.checkBoxA2J.setObjectName("checkBoxA2J")
        self.verticalLayout.addWidget(self.checkBoxA2J)
        self.checkBoxShadows = QtWidgets.QCheckBox(CanvasOptions)
        self.checkBoxShadows.setObjectName("checkBoxShadows")
        self.verticalLayout.addWidget(self.checkBoxShadows)
        self.checkBoxElastic = QtWidgets.QCheckBox(CanvasOptions)
        self.checkBoxElastic.setObjectName("checkBoxElastic")
        self.verticalLayout.addWidget(self.checkBoxElastic)
        self.checkBoxBordersNavigation = QtWidgets.QCheckBox(CanvasOptions)
        self.checkBoxBordersNavigation.setObjectName("checkBoxBordersNavigation")
        self.verticalLayout.addWidget(self.checkBoxBordersNavigation)
        self.checkBoxPreventOverlap = QtWidgets.QCheckBox(CanvasOptions)
        self.checkBoxPreventOverlap.setChecked(False)
        self.checkBoxPreventOverlap.setObjectName("checkBoxPreventOverlap")
        self.verticalLayout.addWidget(self.checkBoxPreventOverlap)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_2 = QtWidgets.QLabel(CanvasOptions)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.spinBoxMaxPortWidth = QtWidgets.QSpinBox(CanvasOptions)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBoxMaxPortWidth.sizePolicy().hasHeightForWidth())
        self.spinBoxMaxPortWidth.setSizePolicy(sizePolicy)
        self.spinBoxMaxPortWidth.setMinimum(40)
        self.spinBoxMaxPortWidth.setMaximum(800)
        self.spinBoxMaxPortWidth.setProperty("value", 170)
        self.spinBoxMaxPortWidth.setObjectName("spinBoxMaxPortWidth")
        self.horizontalLayout_2.addWidget(self.spinBoxMaxPortWidth)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.groupBox = QtWidgets.QGroupBox(CanvasOptions)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.comboBoxTheme = QtWidgets.QComboBox(self.groupBox)
        self.comboBoxTheme.setObjectName("comboBoxTheme")
        self.verticalLayout_3.addWidget(self.comboBoxTheme)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButtonDuplicateTheme = QtWidgets.QPushButton(self.groupBox)
        icon = QtGui.QIcon.fromTheme("edit-duplicate")
        self.pushButtonDuplicateTheme.setIcon(icon)
        self.pushButtonDuplicateTheme.setObjectName("pushButtonDuplicateTheme")
        self.horizontalLayout.addWidget(self.pushButtonDuplicateTheme)
        self.pushButtonEditTheme = QtWidgets.QPushButton(self.groupBox)
        icon = QtGui.QIcon.fromTheme("document-edit")
        self.pushButtonEditTheme.setIcon(icon)
        self.pushButtonEditTheme.setObjectName("pushButtonEditTheme")
        self.horizontalLayout.addWidget(self.pushButtonEditTheme)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.verticalLayout.addWidget(self.groupBox)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem2)
        self.verticalLayout_2.addLayout(self.verticalLayout)

        self.retranslateUi(CanvasOptions)
        QtCore.QMetaObject.connectSlotsByName(CanvasOptions)

    def retranslateUi(self, CanvasOptions):
        _translate = QtCore.QCoreApplication.translate
        CanvasOptions.setWindowTitle(_translate("CanvasOptions", "Canvas Options"))
        self.checkBoxGracefulNames.setToolTip(_translate("CanvasOptions", "<html><head/><body><p>Display shorter and more readable ports and groups names.</p><p>If unchecked, displayed port names will be the trought port names.</p></body></html>"))
        self.checkBoxGracefulNames.setText(_translate("CanvasOptions", "Use graceful names"))
        self.checkBoxA2J.setText(_translate("CanvasOptions", "Group A2J hardware ports"))
        self.checkBoxShadows.setText(_translate("CanvasOptions", "Boxes have shadows"))
        self.checkBoxElastic.setToolTip(_translate("CanvasOptions", "<html><head/><body><p>Always resize the canvas scene to the mininum contents.</p><p>This way, the view is directly optimized while moving boxes.</p></body></html>"))
        self.checkBoxElastic.setText(_translate("CanvasOptions", "Elastic canvas"))
        self.checkBoxBordersNavigation.setToolTip(_translate("CanvasOptions", "<html><head/><body><p>Allows navigation on borders.</p><p>While connecting, moving or selecting boxes, the view is moved when cursor is near a border.<br/>This way, no need to scroll mouse wheel, press shift button or move scroll bars.</p><p><br/>This has strictly no effect if the entire scene is visible in the view.</p></body></html>"))
        self.checkBoxBordersNavigation.setText(_translate("CanvasOptions", "Navigate on borders"))
        self.checkBoxPreventOverlap.setToolTip(_translate("CanvasOptions", "<html><head/><body><p>When this option is active, boxes are automatically moved when another box has been moved over them.</p></body></html>"))
        self.checkBoxPreventOverlap.setText(_translate("CanvasOptions", "Prevent overlapping of boxes"))
        self.label_2.setText(_translate("CanvasOptions", "Maximum port width :"))
        self.groupBox.setTitle(_translate("CanvasOptions", "Theme"))
        self.pushButtonDuplicateTheme.setText(_translate("CanvasOptions", "Duplicate"))
        self.pushButtonEditTheme.setToolTip(_translate("CanvasOptions", "Edit the theme configuration file in a the text editor."))
        self.pushButtonEditTheme.setText(_translate("CanvasOptions", "Edit"))
