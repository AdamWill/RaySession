# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'resources/ui/raysession.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(468, 589)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        MainWindow.setDockNestingEnabled(True)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowNestedDocks|QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks|QtWidgets.QMainWindow.VerticalTabs)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.splitterMainVsCanvas = CanvasSplitter(self.centralwidget)
        self.splitterMainVsCanvas.setOrientation(QtCore.Qt.Horizontal)
        self.splitterMainVsCanvas.setChildrenCollapsible(True)
        self.splitterMainVsCanvas.setObjectName("splitterMainVsCanvas")
        self.layoutWidget1 = QtWidgets.QWidget(self.splitterMainVsCanvas)
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.AppListLayout1 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.AppListLayout1.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.AppListLayout1.setContentsMargins(0, 0, 0, 0)
        self.AppListLayout1.setSpacing(0)
        self.AppListLayout1.setObjectName("AppListLayout1")
        self.splitterSessionVsMessages = QtWidgets.QSplitter(self.layoutWidget1)
        self.splitterSessionVsMessages.setOrientation(QtCore.Qt.Vertical)
        self.splitterSessionVsMessages.setObjectName("splitterSessionVsMessages")
        self.layoutWidget12 = QtWidgets.QWidget(self.splitterSessionVsMessages)
        self.layoutWidget12.setObjectName("layoutWidget12")
        self.AppListLayout11 = QtWidgets.QHBoxLayout(self.layoutWidget12)
        self.AppListLayout11.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.AppListLayout11.setContentsMargins(0, 0, 0, 0)
        self.AppListLayout11.setSpacing(0)
        self.AppListLayout11.setObjectName("AppListLayout11")
        self.AppListLayout12 = QtWidgets.QHBoxLayout()
        self.AppListLayout12.setSpacing(0)
        self.AppListLayout12.setObjectName("AppListLayout12")
        self.frameCurrentSession = SessionFrame(self.layoutWidget12)
        self.frameCurrentSession.setEnabled(False)
        self.frameCurrentSession.setMinimumSize(QtCore.QSize(201, 0))
        self.frameCurrentSession.setMaximumSize(QtCore.QSize(480, 16777215))
        self.frameCurrentSession.setStyleSheet("SessionFrame{background-color: rgba(127, 127, 127, 35);border-radius:4px}")
        self.frameCurrentSession.setObjectName("frameCurrentSession")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frameCurrentSession)
        self.horizontalLayout_3.setContentsMargins(3, 3, 3, 3)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.layoutTopSession = QtWidgets.QHBoxLayout()
        self.layoutTopSession.setSpacing(0)
        self.layoutTopSession.setObjectName("layoutTopSession")
        self.toolButtonSessionMenu = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonSessionMenu.setStyleSheet("QToolButton::menu-indicator{ image: url(none.jpg);}\n"
"QToolButton {border: none}")
        icon = QtGui.QIcon.fromTheme("menu_new")
        self.toolButtonSessionMenu.setIcon(icon)
        self.toolButtonSessionMenu.setObjectName("toolButtonSessionMenu")
        self.layoutTopSession.addWidget(self.toolButtonSessionMenu)
        self.toolButtonNotes = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonNotes.setStyleSheet("QToolButton{border:none}")
        icon = QtGui.QIcon.fromTheme("edittext")
        self.toolButtonNotes.setIcon(icon)
        self.toolButtonNotes.setCheckable(True)
        self.toolButtonNotes.setChecked(False)
        self.toolButtonNotes.setObjectName("toolButtonNotes")
        self.layoutTopSession.addWidget(self.toolButtonNotes)
        self.toolButtonNoRole = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonNoRole.setStyleSheet("QToolButton{border:none}")
        self.toolButtonNoRole.setText("")
        self.toolButtonNoRole.setObjectName("toolButtonNoRole")
        self.layoutTopSession.addWidget(self.toolButtonNoRole)
        spacerItem = QtWidgets.QSpacerItem(0, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.layoutTopSession.addItem(spacerItem)
        self.stackedWidgetSessionName = StackedSessionName(self.frameCurrentSession)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stackedWidgetSessionName.sizePolicy().hasHeightForWidth())
        self.stackedWidgetSessionName.setSizePolicy(sizePolicy)
        self.stackedWidgetSessionName.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.stackedWidgetSessionName.setLineWidth(0)
        self.stackedWidgetSessionName.setObjectName("stackedWidgetSessionName")
        self.layoutTopSession.addWidget(self.stackedWidgetSessionName)
        spacerItem1 = QtWidgets.QSpacerItem(0, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.layoutTopSession.addItem(spacerItem1)
        self.toolButtonAbortSession = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonAbortSession.setStyleSheet("QToolButton{border: none}")
        icon = QtGui.QIcon.fromTheme("list-remove")
        self.toolButtonAbortSession.setIcon(icon)
        self.toolButtonAbortSession.setIconSize(QtCore.QSize(22, 22))
        self.toolButtonAbortSession.setObjectName("toolButtonAbortSession")
        self.layoutTopSession.addWidget(self.toolButtonAbortSession)
        self.closeButton = QtWidgets.QToolButton(self.frameCurrentSession)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.closeButton.sizePolicy().hasHeightForWidth())
        self.closeButton.setSizePolicy(sizePolicy)
        self.closeButton.setMinimumSize(QtCore.QSize(22, 22))
        self.closeButton.setMaximumSize(QtCore.QSize(22, 22))
        self.closeButton.setStyleSheet("QToolButton::menu-indicator{ image: url(none.jpg);}\n"
"QToolButton {border: none}")
        icon = QtGui.QIcon.fromTheme("window-close")
        self.closeButton.setIcon(icon)
        self.closeButton.setIconSize(QtCore.QSize(22, 22))
        self.closeButton.setObjectName("closeButton")
        self.layoutTopSession.addWidget(self.closeButton)
        self.toolButtonControl2 = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonControl2.setStyleSheet("QToolButton::menu-indicator{ image: url(none.jpg);}\n"
"QToolButton {border: none}")
        icon = QtGui.QIcon.fromTheme("configure")
        self.toolButtonControl2.setIcon(icon)
        self.toolButtonControl2.setObjectName("toolButtonControl2")
        self.layoutTopSession.addWidget(self.toolButtonControl2)
        self.verticalLayout.addLayout(self.layoutTopSession)
        spacerItem2 = QtWidgets.QSpacerItem(20, 2, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem2)
        self.layoutSessionDown = QtWidgets.QHBoxLayout()
        self.layoutSessionDown.setContentsMargins(-1, -1, -1, 2)
        self.layoutSessionDown.setSpacing(4)
        self.layoutSessionDown.setObjectName("layoutSessionDown")
        self.layoutSessionToolsLeft = QtWidgets.QHBoxLayout()
        self.layoutSessionToolsLeft.setContentsMargins(-1, -1, -1, 0)
        self.layoutSessionToolsLeft.setSpacing(0)
        self.layoutSessionToolsLeft.setObjectName("layoutSessionToolsLeft")
        self.fullButtonFolder = QtWidgets.QWidget(self.frameCurrentSession)
        self.fullButtonFolder.setObjectName("fullButtonFolder")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.fullButtonFolder)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem3 = QtWidgets.QSpacerItem(4, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.toolButtonFileManager = QtWidgets.QToolButton(self.fullButtonFolder)
        self.toolButtonFileManager.setEnabled(False)
        self.toolButtonFileManager.setMaximumSize(QtCore.QSize(32, 32))
        self.toolButtonFileManager.setStyleSheet("QToolButton{border: none}")
        icon = QtGui.QIcon.fromTheme("system-file-manager")
        self.toolButtonFileManager.setIcon(icon)
        self.toolButtonFileManager.setIconSize(QtCore.QSize(32, 32))
        self.toolButtonFileManager.setObjectName("toolButtonFileManager")
        self.horizontalLayout.addWidget(self.toolButtonFileManager)
        spacerItem4 = QtWidgets.QSpacerItem(4, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem4)
        self.layoutSessionToolsLeft.addWidget(self.fullButtonFolder)
        self.toolButtonFavorites = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonFavorites.setStyleSheet("QToolButton::menu-indicator{ image: url(none.jpg);}\n"
"QToolButton {border: none}")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/scalable/breeze/star-yellow.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButtonFavorites.setIcon(icon)
        self.toolButtonFavorites.setObjectName("toolButtonFavorites")
        self.layoutSessionToolsLeft.addWidget(self.toolButtonFavorites)
        self.toolButtonAddApplication = QtWidgets.QToolButton(self.frameCurrentSession)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButtonAddApplication.sizePolicy().hasHeightForWidth())
        self.toolButtonAddApplication.setSizePolicy(sizePolicy)
        self.toolButtonAddApplication.setMaximumSize(QtCore.QSize(3200, 32))
        self.toolButtonAddApplication.setStyleSheet("QToolButton{margin:0px}")
        icon = QtGui.QIcon.fromTheme("list-add")
        self.toolButtonAddApplication.setIcon(icon)
        self.toolButtonAddApplication.setIconSize(QtCore.QSize(22, 22))
        self.toolButtonAddApplication.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolButtonAddApplication.setObjectName("toolButtonAddApplication")
        self.layoutSessionToolsLeft.addWidget(self.toolButtonAddApplication)
        spacerItem5 = QtWidgets.QSpacerItem(6, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.layoutSessionToolsLeft.addItem(spacerItem5)
        self.toolButtonAddExecutable = QtWidgets.QToolButton(self.frameCurrentSession)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButtonAddExecutable.sizePolicy().hasHeightForWidth())
        self.toolButtonAddExecutable.setSizePolicy(sizePolicy)
        self.toolButtonAddExecutable.setMaximumSize(QtCore.QSize(3200, 32))
        self.toolButtonAddExecutable.setStyleSheet("QToolButton{margin:0px}")
        icon = QtGui.QIcon.fromTheme("run-install")
        self.toolButtonAddExecutable.setIcon(icon)
        self.toolButtonAddExecutable.setIconSize(QtCore.QSize(22, 22))
        self.toolButtonAddExecutable.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolButtonAddExecutable.setObjectName("toolButtonAddExecutable")
        self.layoutSessionToolsLeft.addWidget(self.toolButtonAddExecutable)
        self.layoutSessionDown.addLayout(self.layoutSessionToolsLeft)
        self.layoutSessionToolsRight = QtWidgets.QHBoxLayout()
        self.layoutSessionToolsRight.setContentsMargins(-1, -1, -1, 0)
        self.layoutSessionToolsRight.setSpacing(0)
        self.layoutSessionToolsRight.setObjectName("layoutSessionToolsRight")
        self.widgetPreRewindSpacer = QtWidgets.QWidget(self.frameCurrentSession)
        self.widgetPreRewindSpacer.setObjectName("widgetPreRewindSpacer")
        self.layoutPreServerStatus = QtWidgets.QHBoxLayout(self.widgetPreRewindSpacer)
        self.layoutPreServerStatus.setObjectName("layoutPreServerStatus")
        spacerItem6 = QtWidgets.QSpacerItem(0, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.layoutPreServerStatus.addItem(spacerItem6)
        self.layoutSessionToolsRight.addWidget(self.widgetPreRewindSpacer)
        self.toolButtonSnapshots = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonSnapshots.setMaximumSize(QtCore.QSize(32, 32))
        self.toolButtonSnapshots.setStyleSheet("QToolButton { border: none}")
        icon = QtGui.QIcon.fromTheme("media-seek-backward")
        self.toolButtonSnapshots.setIcon(icon)
        self.toolButtonSnapshots.setIconSize(QtCore.QSize(16, 16))
        self.toolButtonSnapshots.setObjectName("toolButtonSnapshots")
        self.layoutSessionToolsRight.addWidget(self.toolButtonSnapshots)
        self.lineEditServerStatus = StatusBarNegativ(self.frameCurrentSession)
        self.lineEditServerStatus.setMinimumSize(QtCore.QSize(60, 0))
        self.lineEditServerStatus.setMaximumSize(QtCore.QSize(60, 16777215))
        self.lineEditServerStatus.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEditServerStatus.setStyleSheet("")
        self.lineEditServerStatus.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEditServerStatus.setReadOnly(True)
        self.lineEditServerStatus.setObjectName("lineEditServerStatus")
        self.layoutSessionToolsRight.addWidget(self.lineEditServerStatus)
        self.toolButtonSaveSession = QtWidgets.QToolButton(self.frameCurrentSession)
        self.toolButtonSaveSession.setMaximumSize(QtCore.QSize(32, 32))
        self.toolButtonSaveSession.setStyleSheet("QToolButton { border: none}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/scalable/breeze/document-save.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButtonSaveSession.setIcon(icon1)
        self.toolButtonSaveSession.setIconSize(QtCore.QSize(32, 32))
        self.toolButtonSaveSession.setObjectName("toolButtonSaveSession")
        self.layoutSessionToolsRight.addWidget(self.toolButtonSaveSession)
        spacerItem7 = QtWidgets.QSpacerItem(7, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.layoutSessionToolsRight.addItem(spacerItem7)
        self.trashButton = QtWidgets.QToolButton(self.frameCurrentSession)
        self.trashButton.setStyleSheet("QToolButton::menu-indicator{ image: url(none.jpg);}\n"
"QToolButton {border: none}")
        icon = QtGui.QIcon.fromTheme("trash-empty")
        self.trashButton.setIcon(icon)
        self.trashButton.setObjectName("trashButton")
        self.layoutSessionToolsRight.addWidget(self.trashButton)
        self.layoutSessionDown.addLayout(self.layoutSessionToolsRight)
        self.verticalLayout.addLayout(self.layoutSessionDown)
        self.listWidget = ListWidgetClients(self.frameCurrentSession)
        self.listWidget.setAcceptDrops(True)
        self.listWidget.setStyleSheet("QFrame{border:none}")
        self.listWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.listWidget.setDragEnabled(True)
        self.listWidget.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.listWidget.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.listWidget.setUniformItemSizes(False)
        self.listWidget.setBatchSize(80)
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout.addWidget(self.listWidget)
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        self.AppListLayout12.addWidget(self.frameCurrentSession)
        self.AppListLayout11.addLayout(self.AppListLayout12)
        self.layoutWidget121 = QtWidgets.QWidget(self.splitterSessionVsMessages)
        self.layoutWidget121.setObjectName("layoutWidget121")
        self.AppListLayout31 = QtWidgets.QVBoxLayout(self.layoutWidget121)
        self.AppListLayout31.setContentsMargins(0, 0, 0, 0)
        self.AppListLayout31.setObjectName("AppListLayout31")
        spacerItem8 = QtWidgets.QSpacerItem(20, 3, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.AppListLayout31.addItem(spacerItem8)
        self.textEditMessages = QtWidgets.QPlainTextEdit(self.layoutWidget121)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEditMessages.sizePolicy().hasHeightForWidth())
        self.textEditMessages.setSizePolicy(sizePolicy)
        self.textEditMessages.setMinimumSize(QtCore.QSize(0, 30))
        self.textEditMessages.setMaximumSize(QtCore.QSize(480, 16777215))
        self.textEditMessages.setStyleSheet("QPlainTextEdit { font-size: 12px;border-radius:4px}")
        self.textEditMessages.setReadOnly(True)
        self.textEditMessages.setPlainText("")
        self.textEditMessages.setObjectName("textEditMessages")
        self.AppListLayout31.addWidget(self.textEditMessages)
        self.AppListLayout1.addWidget(self.splitterSessionVsMessages)
        self.layoutWidget2 = QtWidgets.QWidget(self.splitterMainVsCanvas)
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.AppListLayout2 = QtWidgets.QVBoxLayout(self.layoutWidget2)
        self.AppListLayout2.setContentsMargins(0, 0, 0, 0)
        self.AppListLayout2.setSpacing(0)
        self.AppListLayout2.setObjectName("AppListLayout2")
        self.graphicsView = DraggableGraphicsView(self.layoutWidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphicsView.sizePolicy().hasHeightForWidth())
        self.graphicsView.setSizePolicy(sizePolicy)
        self.graphicsView.setMinimumSize(QtCore.QSize(20, 0))
        self.graphicsView.setBaseSize(QtCore.QSize(-1, 0))
        self.graphicsView.setStyleSheet("QGraphicsView{border:none}")
        self.graphicsView.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.graphicsView.setTransformationAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.graphicsView.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)
        self.graphicsView.setObjectName("graphicsView")
        self.AppListLayout2.addWidget(self.graphicsView)
        self.verticalLayout_3.addWidget(self.splitterMainVsCanvas)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 468, 30))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuSession = QtWidgets.QMenu(self.menuBar)
        self.menuSession.setObjectName("menuSession")
        self.menuView = QtWidgets.QMenu(self.menuBar)
        self.menuView.setObjectName("menuView")
        self.menuAbout = QtWidgets.QMenu(self.menuBar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuAdd = QtWidgets.QMenu(self.menuBar)
        self.menuAdd.setObjectName("menuAdd")
        self.menuOptions = QtWidgets.QMenu(self.menuBar)
        self.menuOptions.setObjectName("menuOptions")
        MainWindow.setMenuBar(self.menuBar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy)
        self.toolBar.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.toolBar.setMovable(False)
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.toolBar.setFloatable(False)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionToggleShowMessages = QtWidgets.QAction(MainWindow)
        self.actionToggleShowMessages.setCheckable(True)
        icon = QtGui.QIcon.fromTheme("dialog-messages")
        self.actionToggleShowMessages.setIcon(icon)
        self.actionToggleShowMessages.setObjectName("actionToggleShowMessages")
        self.actionSaveSession = QtWidgets.QAction(MainWindow)
        self.actionSaveSession.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.actionSaveSession.setIcon(icon)
        self.actionSaveSession.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionSaveSession.setObjectName("actionSaveSession")
        self.actionOpenSession = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open")
        self.actionOpenSession.setIcon(icon)
        self.actionOpenSession.setObjectName("actionOpenSession")
        self.actionNewSession = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("folder-new")
        self.actionNewSession.setIcon(icon)
        self.actionNewSession.setObjectName("actionNewSession")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("application-exit")
        self.actionQuit.setIcon(icon)
        self.actionQuit.setObjectName("actionQuit")
        self.actionAboutRaySession = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/48x48/raysession.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAboutRaySession.setIcon(icon2)
        self.actionAboutRaySession.setObjectName("actionAboutRaySession")
        self.actionShowMenuBar = QtWidgets.QAction(MainWindow)
        self.actionShowMenuBar.setCheckable(True)
        self.actionShowMenuBar.setChecked(True)
        icon = QtGui.QIcon.fromTheme("show-menu")
        self.actionShowMenuBar.setIcon(icon)
        self.actionShowMenuBar.setObjectName("actionShowMenuBar")
        self.actionControlMenu = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("configure")
        self.actionControlMenu.setIcon(icon)
        self.actionControlMenu.setObjectName("actionControlMenu")
        self.actionCloseSession = QtWidgets.QAction(MainWindow)
        self.actionCloseSession.setEnabled(False)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/scalable/breeze/window-close.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon3.addPixmap(QtGui.QPixmap(":/scalable/breeze/disabled/window-close.svg"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.actionCloseSession.setIcon(icon3)
        self.actionCloseSession.setObjectName("actionCloseSession")
        self.actionAbortSession = QtWidgets.QAction(MainWindow)
        self.actionAbortSession.setEnabled(False)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/scalable/breeze/list-remove.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon4.addPixmap(QtGui.QPixmap(":/scalable/breeze/disabled/list-remove.svg"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        icon4.addPixmap(QtGui.QPixmap(":/scalable/breeze/list-remove.svg"), QtGui.QIcon.Selected, QtGui.QIcon.Off)
        self.actionAbortSession.setIcon(icon4)
        self.actionAbortSession.setObjectName("actionAbortSession")
        self.actionOpenSessionFolder = QtWidgets.QAction(MainWindow)
        self.actionOpenSessionFolder.setEnabled(True)
        icon = QtGui.QIcon.fromTheme("system-file-manager")
        self.actionOpenSessionFolder.setIcon(icon)
        self.actionOpenSessionFolder.setObjectName("actionOpenSessionFolder")
        self.actionKeepFocus = QtWidgets.QAction(MainWindow)
        self.actionKeepFocus.setCheckable(True)
        self.actionKeepFocus.setChecked(True)
        icon = QtGui.QIcon.fromTheme("window-duplicate")
        self.actionKeepFocus.setIcon(icon)
        self.actionKeepFocus.setObjectName("actionKeepFocus")
        self.actionAboutQt = QtWidgets.QAction(MainWindow)
        self.actionAboutQt.setObjectName("actionAboutQt")
        self.actionDuplicateSession = QtWidgets.QAction(MainWindow)
        self.actionDuplicateSession.setEnabled(False)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/scalable/breeze/xml-node-duplicate.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDuplicateSession.setIcon(icon5)
        self.actionDuplicateSession.setObjectName("actionDuplicateSession")
        self.actionAddExecutable = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("run-install")
        self.actionAddExecutable.setIcon(icon)
        self.actionAddExecutable.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionAddExecutable.setObjectName("actionAddExecutable")
        self.actionSaveTemplateSession = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save-as-template")
        self.actionSaveTemplateSession.setIcon(icon)
        self.actionSaveTemplateSession.setObjectName("actionSaveTemplateSession")
        self.actionAddApplication = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("list-add")
        self.actionAddApplication.setIcon(icon)
        self.actionAddApplication.setObjectName("actionAddApplication")
        self.actionRenameSession = QtWidgets.QAction(MainWindow)
        self.actionRenameSession.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("edit-rename")
        self.actionRenameSession.setIcon(icon)
        self.actionRenameSession.setObjectName("actionRenameSession")
        self.actionBookmarkSessionFolder = QtWidgets.QAction(MainWindow)
        self.actionBookmarkSessionFolder.setCheckable(True)
        self.actionBookmarkSessionFolder.setChecked(True)
        icon = QtGui.QIcon.fromTheme("bookmarks")
        self.actionBookmarkSessionFolder.setIcon(icon)
        self.actionBookmarkSessionFolder.setObjectName("actionBookmarkSessionFolder")
        self.actionDesktopsMemory = QtWidgets.QAction(MainWindow)
        self.actionDesktopsMemory.setCheckable(True)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/scalable/breeze/view-list-icons.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDesktopsMemory.setIcon(icon6)
        self.actionDesktopsMemory.setObjectName("actionDesktopsMemory")
        self.actionReturnToAPreviousState = QtWidgets.QAction(MainWindow)
        self.actionReturnToAPreviousState.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("media-seek-backward")
        self.actionReturnToAPreviousState.setIcon(icon)
        self.actionReturnToAPreviousState.setObjectName("actionReturnToAPreviousState")
        self.actionAutoSnapshot = QtWidgets.QAction(MainWindow)
        self.actionAutoSnapshot.setCheckable(True)
        self.actionAutoSnapshot.setChecked(True)
        icon = QtGui.QIcon.fromTheme("deep-history")
        self.actionAutoSnapshot.setIcon(icon)
        self.actionAutoSnapshot.setObjectName("actionAutoSnapshot")
        self.actionDonate = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("help-donate")
        self.actionDonate.setIcon(icon)
        self.actionDonate.setObjectName("actionDonate")
        self.actionSessionScripts = QtWidgets.QAction(MainWindow)
        self.actionSessionScripts.setCheckable(True)
        icon = QtGui.QIcon.fromTheme("application-x-shellscript")
        self.actionSessionScripts.setIcon(icon)
        self.actionSessionScripts.setObjectName("actionSessionScripts")
        self.actionRememberOptionalGuiStates = QtWidgets.QAction(MainWindow)
        self.actionRememberOptionalGuiStates.setCheckable(True)
        icon = QtGui.QIcon.fromTheme("preferences-system-windows")
        self.actionRememberOptionalGuiStates.setIcon(icon)
        self.actionRememberOptionalGuiStates.setObjectName("actionRememberOptionalGuiStates")
        self.actionSessionNotes = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("knotes")
        self.actionSessionNotes.setIcon(icon)
        self.actionSessionNotes.setObjectName("actionSessionNotes")
        self.actionMakeReappearDialogs = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("show-dialogs")
        self.actionMakeReappearDialogs.setIcon(icon)
        self.actionMakeReappearDialogs.setObjectName("actionMakeReappearDialogs")
        self.actionSaveTemplateSession_2 = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save-as-template")
        self.actionSaveTemplateSession_2.setIcon(icon)
        self.actionSaveTemplateSession_2.setObjectName("actionSaveTemplateSession_2")
        self.actionDuplicateSession_2 = QtWidgets.QAction(MainWindow)
        self.actionDuplicateSession_2.setEnabled(False)
        self.actionDuplicateSession_2.setIcon(icon5)
        self.actionDuplicateSession_2.setObjectName("actionDuplicateSession_2")
        self.actionRenameSession_2 = QtWidgets.QAction(MainWindow)
        self.actionRenameSession_2.setEnabled(False)
        icon = QtGui.QIcon.fromTheme("edit-rename")
        self.actionRenameSession_2.setIcon(icon)
        self.actionRenameSession_2.setObjectName("actionRenameSession_2")
        self.actionOnlineManual = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("documentation")
        self.actionOnlineManual.setIcon(icon)
        self.actionOnlineManual.setObjectName("actionOnlineManual")
        self.actionInternalManual = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon.fromTheme("documentation")
        self.actionInternalManual.setIcon(icon)
        self.actionInternalManual.setObjectName("actionInternalManual")
        self.actionShowJackPatchbay = QtWidgets.QAction(MainWindow)
        self.actionShowJackPatchbay.setCheckable(True)
        icon = QtGui.QIcon.fromTheme("qjackctl")
        self.actionShowJackPatchbay.setIcon(icon)
        self.actionShowJackPatchbay.setObjectName("actionShowJackPatchbay")
        self.menuFile.addAction(self.actionNewSession)
        self.menuFile.addAction(self.actionOpenSession)
        self.menuFile.addSeparator()
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuSession.addAction(self.actionSaveSession)
        self.menuSession.addAction(self.actionCloseSession)
        self.menuSession.addAction(self.actionAbortSession)
        self.menuSession.addAction(self.actionDuplicateSession)
        self.menuSession.addAction(self.actionSaveTemplateSession)
        self.menuSession.addAction(self.actionReturnToAPreviousState)
        self.menuSession.addAction(self.actionRenameSession)
        self.menuSession.addAction(self.actionSessionNotes)
        self.menuSession.addSeparator()
        self.menuSession.addAction(self.actionOpenSessionFolder)
        self.menuView.addAction(self.actionShowMenuBar)
        self.menuView.addAction(self.actionToggleShowMessages)
        self.menuView.addAction(self.actionShowJackPatchbay)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionKeepFocus)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionMakeReappearDialogs)
        self.menuAbout.addAction(self.actionAboutRaySession)
        self.menuAbout.addAction(self.actionAboutQt)
        self.menuAbout.addSeparator()
        self.menuAbout.addAction(self.actionOnlineManual)
        self.menuAbout.addAction(self.actionInternalManual)
        self.menuAbout.addAction(self.actionDonate)
        self.menuAdd.addAction(self.actionAddApplication)
        self.menuAdd.addAction(self.actionAddExecutable)
        self.menuOptions.addAction(self.actionBookmarkSessionFolder)
        self.menuOptions.addAction(self.actionAutoSnapshot)
        self.menuOptions.addAction(self.actionDesktopsMemory)
        self.menuOptions.addAction(self.actionSessionScripts)
        self.menuOptions.addAction(self.actionRememberOptionalGuiStates)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuSession.menuAction())
        self.menuBar.addAction(self.menuAdd.menuAction())
        self.menuBar.addAction(self.menuView.menuAction())
        self.menuBar.addAction(self.menuOptions.menuAction())
        self.menuBar.addAction(self.menuAbout.menuAction())
        self.toolBar.addAction(self.actionNewSession)
        self.toolBar.addAction(self.actionOpenSession)
        self.toolBar.addAction(self.actionControlMenu)

        self.retranslateUi(MainWindow)
        self.stackedWidgetSessionName.setCurrentIndex(-1)
        self.actionShowMenuBar.toggled['bool'].connect(self.menuBar.setVisible)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "RaySession"))
        self.toolButtonSessionMenu.setText(_translate("MainWindow", "..."))
        self.toolButtonNotes.setText(_translate("MainWindow", "..."))
        self.toolButtonAbortSession.setText(_translate("MainWindow", "..."))
        self.closeButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Save &amp; Close Session</p></body></html>"))
        self.closeButton.setText(_translate("MainWindow", "..."))
        self.toolButtonControl2.setText(_translate("MainWindow", "..."))
        self.toolButtonFileManager.setToolTip(_translate("MainWindow", "Open Session Folder"))
        self.toolButtonFileManager.setText(_translate("MainWindow", "..."))
        self.toolButtonFavorites.setToolTip(_translate("MainWindow", "Favorite Applications"))
        self.toolButtonFavorites.setText(_translate("MainWindow", "..."))
        self.toolButtonAddApplication.setToolTip(_translate("MainWindow", "Run Command"))
        self.toolButtonAddApplication.setText(_translate("MainWindow", "Application"))
        self.toolButtonAddExecutable.setToolTip(_translate("MainWindow", "Run Command"))
        self.toolButtonAddExecutable.setText(_translate("MainWindow", "Executable"))
        self.toolButtonSnapshots.setToolTip(_translate("MainWindow", "<html><head/><body><p>Go back to a previous state of the session.</p></body></html>"))
        self.toolButtonSnapshots.setText(_translate("MainWindow", "Snapshots"))
        self.lineEditServerStatus.setToolTip(_translate("MainWindow", "Server Status"))
        self.lineEditServerStatus.setText(_translate("MainWindow", "off"))
        self.toolButtonSaveSession.setToolTip(_translate("MainWindow", "Save Session"))
        self.toolButtonSaveSession.setText(_translate("MainWindow", "Save Session"))
        self.trashButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Trash</p><p>You will find here removed clients.</p></body></html>"))
        self.trashButton.setText(_translate("MainWindow", "..."))
        self.menuFile.setTitle(_translate("MainWindow", "Fi&le"))
        self.menuSession.setTitle(_translate("MainWindow", "&Session"))
        self.menuView.setTitle(_translate("MainWindow", "&View"))
        self.menuAbout.setTitle(_translate("MainWindow", "&Help"))
        self.menuAdd.setTitle(_translate("MainWindow", "Add"))
        self.menuOptions.setTitle(_translate("MainWindow", "Options"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionToggleShowMessages.setText(_translate("MainWindow", "&Show Messages"))
        self.actionToggleShowMessages.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionSaveSession.setText(_translate("MainWindow", "&Save"))
        self.actionSaveSession.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionOpenSession.setText(_translate("MainWindow", "&Open Session"))
        self.actionOpenSession.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionNewSession.setText(_translate("MainWindow", "&New Session"))
        self.actionNewSession.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionQuit.setText(_translate("MainWindow", "&Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionAboutRaySession.setText(_translate("MainWindow", "&About Ray Session"))
        self.actionShowMenuBar.setText(_translate("MainWindow", "Show &Menu Bar"))
        self.actionShowMenuBar.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionControlMenu.setText(_translate("MainWindow", "Control"))
        self.actionControlMenu.setToolTip(_translate("MainWindow", "Control"))
        self.actionCloseSession.setText(_translate("MainWindow", "&Close"))
        self.actionCloseSession.setToolTip(_translate("MainWindow", "Save and Close Session"))
        self.actionCloseSession.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionAbortSession.setText(_translate("MainWindow", "&Abort"))
        self.actionAbortSession.setToolTip(_translate("MainWindow", "Abort Current Session"))
        self.actionAbortSession.setShortcut(_translate("MainWindow", "Ctrl+Shift+W"))
        self.actionOpenSessionFolder.setText(_translate("MainWindow", "&Open Session Folder"))
        self.actionOpenSessionFolder.setToolTip(_translate("MainWindow", "Open session folder with file manager"))
        self.actionKeepFocus.setText(_translate("MainWindow", "&Keep focus while opening clients"))
        self.actionKeepFocus.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionAboutQt.setText(_translate("MainWindow", "About &Qt"))
        self.actionDuplicateSession.setText(_translate("MainWindow", "&Duplicate"))
        self.actionDuplicateSession.setToolTip(_translate("MainWindow", "<html><head/><body><p>Duplicate the current session</p></body></html>"))
        self.actionDuplicateSession.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionAddExecutable.setText(_translate("MainWindow", "&Executable"))
        self.actionAddExecutable.setToolTip(_translate("MainWindow", "Add executable to current session"))
        self.actionAddExecutable.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionSaveTemplateSession.setText(_translate("MainWindow", "Sa&ve As Template"))
        self.actionSaveTemplateSession.setToolTip(_translate("MainWindow", "Save current session as template"))
        self.actionAddApplication.setText(_translate("MainWindow", "&Application"))
        self.actionAddApplication.setToolTip(_translate("MainWindow", "Add application to current session"))
        self.actionAddApplication.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.actionRenameSession.setText(_translate("MainWindow", "&Rename"))
        self.actionBookmarkSessionFolder.setText(_translate("MainWindow", "&Provide bookmarks for session folder"))
        self.actionDesktopsMemory.setText(_translate("MainWindow", "&Desktops Memory (requires wmctrl)"))
        self.actionReturnToAPreviousState.setText(_translate("MainWindow", "Return To A &Previous State (requires git)"))
        self.actionAutoSnapshot.setText(_translate("MainWindow", "&Auto Snapshot At Save (requires git)"))
        self.actionAutoSnapshot.setToolTip(_translate("MainWindow", "Auto Snapshot at Save (requires git)"))
        self.actionDonate.setText(_translate("MainWindow", "&Donate"))
        self.actionSessionScripts.setText(_translate("MainWindow", "&Session Scripts"))
        self.actionSessionScripts.setToolTip(_translate("MainWindow", "Run the session scripts inside the directory ray-scripts"))
        self.actionRememberOptionalGuiStates.setText(_translate("MainWindow", "&Remember optional GUI states"))
        self.actionRememberOptionalGuiStates.setToolTip(_translate("MainWindow", "Remember if optional GUIs were shown"))
        self.actionSessionNotes.setText(_translate("MainWindow", "&Edit Session Notes"))
        self.actionMakeReappearDialogs.setText(_translate("MainWindow", "Make &reappear all dialog windows"))
        self.actionSaveTemplateSession_2.setText(_translate("MainWindow", "Save as Template the current session"))
        self.actionSaveTemplateSession_2.setToolTip(_translate("MainWindow", "Save current session as template"))
        self.actionDuplicateSession_2.setText(_translate("MainWindow", "Duplicate the current session"))
        self.actionDuplicateSession_2.setToolTip(_translate("MainWindow", "<html><head/><body><p>Duplicate the current session</p></body></html>"))
        self.actionDuplicateSession_2.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionRenameSession_2.setText(_translate("MainWindow", "Rename the current session"))
        self.actionOnlineManual.setText(_translate("MainWindow", "&Online Manual"))
        self.actionOnlineManual.setToolTip(_translate("MainWindow", "Open the online manual in the web browser"))
        self.actionInternalManual.setText(_translate("MainWindow", "&Internal Manual"))
        self.actionInternalManual.setToolTip(_translate("MainWindow", "Displays internal manual in a web browser"))
        self.actionShowJackPatchbay.setText(_translate("MainWindow", "Show &JACK patchbay"))
        self.actionShowJackPatchbay.setShortcut(_translate("MainWindow", "Ctrl+J"))

from list_widget_clients import ListWidgetClients
from surclassed_widgets import CanvasSplitter, DraggableGraphicsView, SessionFrame, StackedSessionName, StatusBarNegativ
import resources_rc
